name: Publish Electron Forge Build to GitHub Releases

on:
  push:
    branches:
      - master  # Change this to your default branch

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Build Electron Forge for Windows
        run: npm run desktop-build

      - name: Build Electron Forge for Windows
        run: npm run make

      - name: Archive Windows Build
        run: |
          mkdir -p releases
          mv ./out/make/zip/win32/x64/algone-studio-* releases/algone-studio-win-x64.zip
        shell: bash

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Build Electron Forge for Windows
        run: npm run desktop-build

      - name: Build Electron Forge for macOS
        run: npm run make

      - name: Archive macOS Build
        run: |
          mkdir -p releases
          mv ./out/make/zip/darwin/x64/algone-studio-* releases/algone-studio-darwin-x64.zip
        shell: bash

      - name: Upload MacOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: algone-studio-darwin
          path: releases/algone-studio-darwin-x64.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Build Electron Forge for Windows
        run: npm run desktop-build

      - name: Build Electron Forge for Linux
        run: npm run make

      - name: Archive Linux Build
        run: |
          zip -r algone-studio-linux-x64.zip ./out/algone-studio-*
        shell: bash

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: algone-studio-linux
          path: algone-studio-linux-x64.zip

  create-release:
    runs-on: ubuntu-latest
    needs: build-macos #[build-windows, build-macos, build-linux]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - uses: actions/download-artifact@v3
        id: download-darwin
        with:
          name: algone-studio-darwin

      - name: Check semver incremented value
        id: check_incremented_value
        run: |
          string="${{ github.event.head_commit.message }}"
          if [[ $string == *"#minor"* ]]; then
            echo "incremented_value=minor" >> $GITHUB_OUTPUT
          elif [[ $string == *"#major"* ]]; then
            echo "incremented_value=major" >> $GITHUB_OUTPUT
          else
            echo "incremented_value=patch" >> $GITHUB_OUTPUT
          fi

      - name: Create tag
        id: tag
        uses: SOLIDSoftworks/semver-tags@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag-prefix: 'v'
          default-version: '0.0.1'
          incremented-value: ${{ steps.check_incremented_value.outputs.incremented_value }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.semantic-version }}  # Replace with your desired release tag
          release_name: Release ${{ steps.tag.outputs.semantic-version }}  # Replace with your desired release name
          draft: false
          prerelease: false

#      - name: Upload Windows Build
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: releases/algone-studio-win-x64.zip
#          asset_name: algone-studio-win-x64.zip
#          asset_content_type: application/zip

      - name: Upload macOS Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.download-darwin.outputs.download-path }}/algone-studio-darwin-x64.zip
          asset_name: algone-studio-darwin-x64.zip
          asset_content_type: application/zip

#      - name: Upload Linux Build
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: releases/algone-studio-linux-x64.zip
#          asset_name: algone-studio-linux-x64.zip
#          asset_content_type: application/zip
