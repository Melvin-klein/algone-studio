name: Build and Release desktop app

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm i

      - name: Build app
        run: npm run desktop-build

      - name: Build Electron app
        id: build
        run: npm run make

      - name: Archive binary
        if: ${{ matrix.os }} == macos-latest
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-binary
          path: out/algone-studio-darwin-x64/algone-studio.app

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check semver incremented value
        id: check_incremented_value
        run: |
          string="${{ github.event.head_commit.message }}"
          if [[ $string == *"#minor"* ]]; then
            echo "incremented_value=minor" >> $GITHUB_OUTPUT
          elif [[ $string == *"#major"* ]]; then
            echo "incremented_value=major" >> $GITHUB_OUTPUT
          else
            echo "incremented_value=patch" >> $GITHUB_OUTPUT
          fi

      - name: Create tag
        id: tag
        uses: SOLIDSoftworks/semver-tags@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag-prefix: 'v'
          default-version: '0.0.1'
          incremented-value: ${{ steps.check_incremented_value.outputs.incremented_value }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
        with:
          tag_name: ${{ steps.tag.outputs.semantic-version }}
          release_name: ${{ steps.tag.outputs.semantic-version }}
          draft: false
          prerelease: false

      - name: Download MacOS artifact
        id: download_macos
        uses: actions/download-artifact@v3
        with:
          name: macos-latest-binary

      - name: Upload MacOS binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.download_macos.outputs.download-path }}
          asset_name: algone-studio.app
          asset_content_type: application/octet-stream